library("rmarkdown")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
library("revealjs")
install.packages("revealjs")
library("revealjs")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
ls()
plot(whales)
str(cset)
cset
dev.off()
css <- credibleShiftSet(edata, expectedNumberOfShifts=1, threshold=5, set.limit = 0.95)

css <- credibleShiftSet(edata_whales, expectedNumberOfShifts=1, threshold=5, set.limit = 0.95)
css$number.distinct
summary(css)
plot.credibleshiftset(css)
plot.credibleshiftset(css[4,])
plot.credibleshiftset(css[4])
css$indices
dev.off()
css$indices
marg_probs <- marginalShiftProbsTree(edata)
plot.phylo(marg_probs)
marg_probs <- marginalShiftProbsTree(edata_whales)

plot.phylo(marg_probs)
marg_probs <- marginalShiftProbsTree(edata_whales)
plot.phylo(marg_probs)
plotRateThroughTime(edata_whales, ratetype="speciation")
cst <- cumulativeShiftProbsTree(edata_whales)
plot.phylo(cst)

cst <- cumulativeShiftProbsTree(edata_whales)
edgecols <- rep('black', length(whales$edge.length))
is_highprobshift <- cst$edge.length >= 0.95
edgecols[ is_highprobshift ] <- "red"
plot.phylo(mytree, edge.color = edgecols)

cst <- cumulativeShiftProbsTree(edata_whales)
edgecols <- rep('black', length(whales$edge.length))
is_highprobshift <- cst$edge.length >= 0.95
edgecols[ is_highprobshift ] <- "red"
plot.phylo(whales, edge.color = edgecols)
data(mcmc.whales)
computeBayesFactors(mcmc.whales, expectedNumberOfShifts=1, burnin=0.1)

data(mcmc.whales)
plotPrior(mcmc.whales, expectedNumberOfShifts=1)
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
?library
library("BAMMtools")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
load("/home/docs/backup_dropbox/Habitat_evolution_vipers/analysis/Analises_Jul_2016/simmap_for_OUwie.Rdata")
ls()
lista.final[[1]]
plot(lista.final[[1]])
class(lista.final[[1]])
ls()
load("/home/docs/backup_dropbox/Habitat_evolution_vipers/analysis/Analises_Jul_2016/simmap_result.Rdata")
load("/home/docs/backup_dropbox/Habitat_evolution_vipers/analysis/Analises_Jul_2016/simmap_result.RData")
ls()
res[[1]]
res[[1]][[1]]
res[[1]]
str(res)
length(res)
plot(res[[1]][[1]])
class(res[[1]][[1]])
plotSimmap(res[[1]][[1]])
library("phytools")
plotSimmap(res[[1]][[1]])
plotSimmap(res[[1]][[1]], type = "fan")
plotSimmap(res[[1]][[1]], type = "fan", cex = 0.5)
plotSimmap(res[[1]][[1]], type = "fan", show.tip.label = FALSE)
plotSimmap(res[[1]][[1]], type = "fan", fsize = 0.5)
plotSimmap(res[[1]][[1]], type = "fan", fsize = 0.5, pts = TRUE)
plotSimmap(res[[1]], type = "fan", fsize = 0.5, pts = TRUE)
ls()
edgecols
library("RColorBrewer")
plotSimmap(res[[1]], type = "fan", colors = brewer.pal(4, "Set1"), fsize = 0.5, pts = TRUE)
brewer.pal(4, "Set1")
plotSimmap(res[[1]][[1]], type = "fan", colors = brewer.pal(4, "Set3"), fsize = 0.5, pts = TRUE)
dev.off()
plotSimmap(res[[1]][[1]], type = "fan", colors = brewer.pal(4, "Set3"), fsize = 0.5, pts = TRUE)
cols<-setNames(brewer.pal(4, "Set1"), letters[1:4])
cols
plotSimmap(res[[1]][[1]], type = "fan", colors = cols, fsize = 0.5, pts = TRUE)
cols<-setNames(brewer.pal(4, "Set1"), 1:4)
plotSimmap(res[[1]][[1]], type = "fan", colors = cols, fsize = 0.5, pts = TRUE)
str(res[[1]][[1]])
dir("./data")
plot.phylo(res[[1]][[1]], type = "fan", offset = 1)
plotBranchbyTrait(res[[1]][[1]], traits)
traits
traits
head(traits)
plotBranchbyTrait(res[[1]][[1]], traits[,2])
plotBranchbyTrait(res[[1]][[1]], traits[,2], mode = "tips")
plotBranchbyTrait(res[[1]][[1]], as.factor(traits[,2]), mode = "tips")
plotBranchbyTrait(res[[1]][[1]], as.factor(traits[,2]))
plotBranchbyTrait(res[[1]][[1]], factor(traits[,2]))
brewer.pal(4, "Set1")[traits[,2]]
head(traits)
head(traits)
head(res[[1]][[1]]$tip.label)
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
a <- describe.simmap(res[[1]])
a
nodelabels(node=1:res[[1]][[1]]$Nnode+Ntip(res[[1]][[1]]), pie=a$ace, cex=0.35, piecol=brewer.pal(4, "Set3"))
]
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
plotSimmap(res[[1
plotSimmap(res[[1]])
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
rmarkdown::render("macroevo_herps_2018_Jan_teorica.Rmd", encoding = "utf8")
q()
n
